
name: Release PowerShell Module

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release PowerShell Module
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine IncrementVersion from PR title
        id: bump
        run: |
          # Default to Minor
          INCREMENT_VERSION="Minor"
          # Get PR title if available
          if [ "$GITHUB_EVENT_NAME" = "pull_request" ]; then
            PR_TITLE="$(jq -r .pull_request.title < $GITHUB_EVENT_PATH)"
            echo "PR Title: $PR_TITLE"
            if echo "$PR_TITLE" | grep -iq "MAJOR"; then
              INCREMENT_VERSION="Major"
            elif echo "$PR_TITLE" | grep -iq "MINOR"; then
              INCREMENT_VERSION="Minor"
            elif echo "$PR_TITLE" | grep -iq "PATCH"; then
              INCREMENT_VERSION="Patch"
            fi
          fi
          echo "INCREMENT_VERSION=$INCREMENT_VERSION"
          echo "INCREMENT_VERSION=$INCREMENT_VERSION" >> $GITHUB_ENV

      - name: Publish PowerShell Module
        id: publish
        shell: pwsh
        run: |
          pwsh ./build/Publish-MyModule.ps1 -Path "./EntraIdDSC/" -ApiKey "${{ secrets.PSGALLERY_API_KEY }}" -IncrementVersion "${{ env.INCREMENT_VERSION }}"

      - name: Push Changes to repository
        id: push
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "chore: bump module version to ${{ steps.publish.outputs.MODULE_VERSION }}" || echo "No changes to commit"
          git remote set-url origin https://git:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          # git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}
          git push origin main --force

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.publish.outputs.MODULE_VERSION }}
          name: Version ${{ steps.publish.outputs.MODULE_VERSION }}
          draft: false
          prerelease: false
